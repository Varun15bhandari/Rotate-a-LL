/*Definition of singly linked list:
class ListNode {
    int val;
    ListNode next;

    ListNode() {
        val = 0;
        next = null;
    }

    ListNode(int data1) {
        val = data1;
        next = null;
    }

    ListNode(int data1, ListNode next1) {
        val = data1;
        next = next1;
    }
}
 */

class Solution {
    public ListNode getnewHead(ListNode head,int k){
               ListNode temp=head;
               int cnt=0;
               while(temp!=null){
                cnt++;
                if(cnt==k){
                    return temp;
                }
                temp=temp.next;
               }
               return temp;
    }
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null){
            return head;

        }
        ListNode tail=head;
        int len=1;
        while(tail.next!=null){
             len++;
             tail=tail.next;
        }
           k=k%len;
        if(k%len==0)return head;
     
        tail.next=head;
        ListNode newHead=getnewHead(head,len-k);
        head=newHead.next;
        newHead.next=null;
         return head;
    }
   
}
